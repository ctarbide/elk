. ../../config/system
. ../../config/site

echo Building Makefile.local...
cat <<EOT >Makefile.local
# This Makefile was produced by running ./build in this directory.

SHELL=/bin/sh

CC= ${cc-cc}
CFLAGS= $cflags $obj_cflags
LINTFLAGS= $lintflags
SCMFLAGS= -p .:../../scm:../xt

INC=	../../include

H=	\$(INC)/compat.h\\
	\$(INC)/config.h\\
	\$(INC)/cstring.h\\
	\$(INC)/exception.h\\
	\$(INC)/extern.h\\
	\$(INC)/funcproto.h\\
	\$(INC)/gc.h\\
	\$(INC)/misc.h\\
	\$(INC)/object.h\\
	\$(INC)/param.h\\
	\$(INC)/stkmem.h\\
	\$(INC)/type.h\\
	../xlib/xlib.h\\
	../xt/xt.h

O=	ascii.o\\
	box.o\\
	command.o\\
	dialog.o\\
	form.o\\
	grip.o\\
	label.o\\
	list.o\\
	menubutton.o\\
	paned.o\\
	panner.o\\
	porthole.o\\
	repeater.o\\
	scrollbar.o\\
	shell.o\\
	simplemenu.o\\
	sme.o\\
	smebsb.o\\
	smeline.o\\
	stripchart.o\\
	toggle.o\\
	tree.o\\
	viewport.o

SO=	ascii.so\\
	box.so\\
	command.so\\
	dialog.so\\
	form.so\\
	grip.so\\
	label.so\\
	list.so\\
	menubutton.so\\
	paned.so\\
	panner.so\\
	porthole.so\\
	repeater.so\\
	scrollbar.so\\
	shell.so\\
	simplemenu.so\\
	sme.so\\
	smebsb.so\\
	smeline.so\\
	stripchart.so\\
	toggle.so\\
	tree.so\\
	viewport.so

WIDGET_SET= xaw

.SUFFIXES: .d .c .o

.c.o:
	\$(CC) \$(CFLAGS) -I\$(INC) -I../xlib $x11_incl -c \$<
	../../scripts/makedl \$@ \$@

.d.c:
	LD_LIBRARY_PATH=../../src ../../src/scheme \$(SCMFLAGS) -l mkwidget.scm \$< \$@ \$(WIDGET_SET)

.d.o:
	LD_LIBRARY_PATH=../../src ../../src/scheme \$(SCMFLAGS) -l mkwidget.scm \$< \$*.c \$(WIDGET_SET)
	\$(CC) \$(CFLAGS) -I\$(INC) -I../xlib $x11_incl -c \$*.c
	../../scripts/makedl \$@ \$@

all: \$(SO)

ascii.o:	\$(H) ascii.d
box.o:		\$(H) box.d
command.o:	\$(H) command.d
dialog.o:	\$(H) dialog.d
form.o:		\$(H) form.d
grip.o:		\$(H) grip.d
label.o:	\$(H) label.d
list.o:		\$(H) list.d
menubutton.o:	\$(H) menubutton.d
paned.o:	\$(H) paned.d
panner.o:	\$(H) panner.d
porthole.o:	\$(H) porthole.d
repeater.o:	\$(H) repeater.d
scrollbar.o:	\$(H) scrollbar.d
shell.o:	\$(H) shell.d
simplemenu.o:	\$(H) simplemenu.d
sme.o:		\$(H) sme.d
smebsb.o:	\$(H) smebsb.d
smeline.o:	\$(H) smeline.d
stripchart.o:	\$(H) stripchart.d
toggle.o:	\$(H) toggle.d
tree.o:		\$(H) tree.d
viewport.o:	\$(H) viewport.d

ascii.so:	ascii.o
	gcc -shared -o \$@ \$< $libxaw -lc

box.so:		box.o
	gcc -shared -o \$@ \$< $libxaw -lc

command.so:	command.o
	gcc -shared -o \$@ \$< $libxaw -lc

dialog.so:	dialog.o
	gcc -shared -o \$@ \$< $libxaw -lc

form.so:	form.o
	gcc -shared -o \$@ \$< $libxaw -lc

grip.so:	grip.o
	gcc -shared -o \$@ \$< $libxaw -lc

label.so:	label.o
	gcc -shared -o \$@ \$< $libxaw -lc

list.so:	list.o
	gcc -shared -o \$@ \$< $libxaw -lc

menubutton.so:	menubutton.o
	gcc -shared -o \$@ \$< $libxaw -lc

paned.so:	paned.o
	gcc -shared -o \$@ \$< $libxaw -lc

panner.so:	panner.o
	gcc -shared -o \$@ \$< $libxaw -lc

porthole.so:	porthole.o
	gcc -shared -o \$@ \$< $libxaw -lc

repeater.so:	repeater.o
	gcc -shared -o \$@ \$< $libxaw -lc

scrollbar.so:	scrollbar.o
	gcc -shared -o \$@ \$< $libxaw -lc

shell.so:	shell.o
	gcc -shared -o \$@ \$< $libxaw -lc

simplemenu.so:	simplemenu.o
	gcc -shared -o \$@ \$< $libxaw -lc

sme.so:		sme.o
	gcc -shared -o \$@ \$< $libxaw -lc

smebsb.so:	smebsb.o
	gcc -shared -o \$@ \$< $libxaw -lc

smeline.so:	smeline.o
	gcc -shared -o \$@ \$< $libxaw -lc

stripchart.so:	stripchart.o
	gcc -shared -o \$@ \$< $libxaw -lc

toggle.so:	toggle.o
	gcc -shared -o \$@ \$< $libxaw -lc

tree.so:	tree.o
	gcc -shared -o \$@ \$< $libxaw -lc

viewport.so:	viewport.o
	gcc -shared -o \$@ \$< $libxaw -lc


install: \$(SO)
	-@if [ ! -d $install_dir/lib ]; then \\
	    echo mkdir $install_dir/lib; \\
	    mkdir $install_dir/lib; \\
	fi
	-@if [ ! -d $install_dir/lib/elk ]; then \\
	    echo mkdir $install_dir/lib/elk; \\
	    mkdir $install_dir/lib/elk; \\
	fi
	-@if [ ! -d $install_dir/lib/elk/xaw ]; then \\
	    echo mkdir $install_dir/lib/elk/xaw; \\
	    mkdir $install_dir/lib/elk/xaw; \\
	fi
	@for i in \$(SO) ALIASES ;\\
	do \\
	    echo cp \$\$i $install_dir/lib/elk/xaw; \\
	    cp \$\$i $install_dir/lib/elk/xaw; \\
	done

lint:
	lint \$(LINTFLAGS) -I\$(INC) -I../xlib $x11_incl *.c

clean:
	rm -f *.so *.o *.c core

distclean:
	rm -f *.so *.o *.c core lint.out Makefile.local
EOT
